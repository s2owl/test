<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= parent.name %> Components</title>
    <style>
        /* General Body and Container Styles - Keep in sync with index.ejs if not externalised */
        body { font-family: sans-serif; margin: 20px; background-color: #f4f4f4; color: #333; }
        .container { max-width: 800px; margin: 0 auto; background-color: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        h1, h2, h3, h4 { color: #0056b3; } /* Added h3, h4 for consistency */

        /* Form Styles */
        form { margin-bottom: 20px; padding: 15px; border: 1px solid #ddd; border-radius: 5px; background-color: #fafafa; }
        form label { display: block; margin-bottom: 5px; font-weight: bold; }
        form input[type="text"],
        form textarea,
        form input[type="file"],
        form select { /* Added select for config options */
            width: calc(100% - 22px);
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        form textarea { min-height: 60px; resize: vertical; } /* Allow vertical resizing for textareas */
        form button {
            background-color: #28a745;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px; /* Corrected typo from 44px */
            cursor: pointer;
            font-size: 16px;
            margin-right: 5px;
        }
        form button:hover { background-color: #218838; }

        /* Item Display Styles */
        .item { background-color: #e9ecef; padding: 15px; margin-bottom: 10px; border-radius: 5px; display: flex; align-items: flex-start; justify-content: space-between; flex-wrap: wrap; }
        .item .details { flex-grow: 1; margin-right: 15px; }
        .item .details h3 { margin: 0 0 5px 0; color: #343a40; }
        .item .details p { margin: 0; font-size: 0.9em; color: #555; }

        /* Sub-component display styles for parent_detail.ejs */
        .sub-component-display {
            background-color: #f0f0f0;
            padding: 10px;
            border-radius: 5px;
            margin-top: 10px;
        }
        .sub-component-display ul {
            list-style-type: disc;
            margin-left: 20px;
            padding: 0;
        }
        .sub-component-display li {
            margin-bottom: 5px;
        }

        /* Version specific styles */
        .component-version-card {
            border: 1px solid #b9d8f7;
            background-color: #eaf6ff;
            padding: 10px;
            margin-top: 10px;
            border-radius: 5px;
        }
        .component-version-card details {
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px dashed #c1e0ff;
        }

        /* Action Buttons (Edit, Delete, Move) */
        .item .actions { display: flex; flex-wrap: wrap; gap: 5px; } /* Added gap for better spacing */
        .item .actions button,
        .item .actions a.button { /* Style for the 'View/Edit Components' link */
            background-color: #007bff;
            color: white;
            padding: 8px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none; /* For the link that looks like a button */
            display: inline-block; /* Ensure link behaves like a button */
            text-align: center;
        }
        .item .actions button:hover,
        .item .actions a.button:hover { background-color: #0056b3; }
        .item .actions button.delete { background-color: #dc3545; }
        .item .actions button.delete:hover { background-color: #c82333; }
        .item .actions button.move { background-color: #ffc107; color: #333; }
        .item .actions button.move:hover { background-color: #e0a800; }

        /* Message Display Styles */
        .message { padding: 10px; margin-bottom: 20px; border-radius: 5px; }
        .message.error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .message:not(.error) { /* Default success style */
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        /* File Upload/Download Section Styles */
        .file-upload-section { margin-top: 30px; border-top: 1px dashed #ccc; padding-top: 20px; }
        .file-upload-section button { background-color: #17a2b8; } /* Info blue for download/upload */
        .file-upload-section button:hover { background-color: #138496; }

        /* Dynamic Fields Section (for parent_detail.ejs) */
        .dynamic-fields-section {
            border: 1px dashed #b9d8f7;
            padding: 10px;
            margin-bottom: 10px;
            background-color: #eaf6ff;
            border-radius: 5px;
        }
        .dynamic-field-row {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 8px;
            flex-wrap: wrap; /* Allow wrapping on smaller screens */
        }
        .dynamic-field-row input, .dynamic-field-row select {
            flex: 1; /* Distribute space */
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .dynamic-field-row button {
            background-color: #dc3545; /* Red for remove */
            color: white;
            padding: 6px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9em;
        }
        .dynamic-field-row button:hover {
            background-color: #c82333;
        }
        .add-field-button {
            background-color: #007bff; /* Blue for add */
            margin-top: 10px;
        }
        .add-field-button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <div class="container">
        <a href="/<%= appName %>/" class="button">‚Üê Back to Parent APIs</a>
        <h1>Components for: <%= parent.name %></h1>
        <p><strong>Description:</strong> <%= parent.description %></p>
        <p><strong>Label:</strong> <%= parent.parent_label %></p>
        <p>Parent ID: <%= parent.id %></p>

        <% if (message) { %>
            <div class="message <%= message.includes('Error') ? 'error' : '' %>">
                <%= message %>
            </div>
        <% } %>

        <h2>Add New Component</h2>
        <form action="/<%= appName %>/parent/<%= parent.id %>/add-component" method="POST">
            <label for="comp_name">Component Name:</label>
            <input type="text" id="comp_name" name="comp_name" required>

            <label for="comp_description">Description:</label>
            <textarea id="comp_description" name="comp_description"></textarea>

            <label for="component_type">Component Type:</label>
            <input type="text" id="component_type" name="component_type" value="service">

            <label for="component_label">Component Label (e.g., strategic, niche, contain):</label>
            <input type="text" id="component_label" name="component_label" value="strategic">

            <h3>Initial Version Details:</h3>
            <label for="version">Version String:</label>
            <input type="text" id="version" name="version" value="1.0.0" required>

            <label for="lifecycle_status">Lifecycle Status:</label>
            <input type="text" id="lifecycle_status" name="lifecycle_status" value="active">

            <h4>Governance:</h4>
            <label for="governance_status">Status:</label>
            <input type="text" id="governance_status" name="governance_status" value="approved">
            <label for="governance_approval_link">Approval Link:</label>
            <input type="text" id="governance_approval_link" name="governance_approval_link">

            <label for="topology_diagram_link">Topology Diagram Link:</label>
            <input type="text" id="topology_diagram_link" name="topology_diagram_link">

            <h4>Deployment Locations:</h4>
            <div id="add-deployment-locations-container">
                <div class="dynamic-field-row">
                    <input type="text" name="deployment_site_0" placeholder="Site (e.g., London-DC1)">
                    <input type="text" name="deployment_zone_0" placeholder="Zone (e.g., DMZ-A)">
                    <input type="text" name="deployment_segment_0" placeholder="Segment (e.g., Public-Facing)">
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                </div>
            </div>
            <button type="button" class="add-field-button" onclick="addDynamicField('deployment-location', 'add-deployment-locations-container', 'deployment_')">Add Deployment Location</button>


            <label for="operational_guidelines_link">Operational Guidelines Link:</label>
            <input type="text" id="operational_guidelines_link" name="operational_guidelines_link">

            <label for="standards_tags">Standards Tags (comma-separated):</label>
            <input type="text" id="standards_tags" name="standards_tags">

            <h4>Observability Links (Key-Value Pairs):</h4>
            <div id="add-observability-links-container">
                <div class="dynamic-field-row">
                    <input type="text" name="obs_key_0" placeholder="Key (e.g., logging)">
                    <input type="text" name="obs_value_0" placeholder="Value (e.g., link)">
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                </div>
            </div>
            <button type="button" class="add-field-button" onclick="addDynamicField('observability-link', 'add-observability-links-container', 'obs_')">Add Observability Link</button>

            <label for="base_config_source_link">Base Config Source Link:</label>
            <input type="text" id="base_config_source_link" name="base_config_source_link">

            <label for="supported_capabilities">Supported Capabilities (comma-separated):</label>
            <input type="text" id="supported_capabilities" name="supported_capabilities">

            <button type="submit">Add Component with Initial Version</button>
        </form>

        <h2>Existing Components</h2>
        <% if (parent.components && parent.components.length === 0) { %>
            <p>No components found for this Parent API.</p>
        <% } else { %>
            <% parent.components.forEach(component => { %>
                <div class="item">
                    <div class="details">
                        <h3><%= component.name %> <small>(ID: <%= component.id %>)</small></h3>
                        <p><strong>Description:</strong> <%= component.description %></p>
                        <p><strong>Type:</strong> <%= component.component_type %></p>
                        <p><strong>Label:</strong> <%= component.component_label %></p>

                        <h4>Component Versions:</h4>
                        <% if (component.component_versions && component.component_versions.length > 0) { %>
                            <% component.component_versions.forEach(version => { %>
                                <div class="component-version-card">
                                    <details>
                                        <summary>
                                            <strong>Version: <%= version.version %></strong>
                                            (Lifecycle: <%= version.lifecycle_status %>)
                                            <span style="float: right;">
                                                <button disabled title="Full dynamic edit form is complex to implement with plain EJS/JS.">Edit Version (WIP)</button>
                                                <form action="/<%= appName %>/parent/<%= parent.id %>/component/<%= component.id %>/version/<%= version.version %>/delete" method="POST" style="display: inline;" onsubmit="return confirm('Are you sure you want to delete version <%= version.version %>?');">
                                                    <button type="submit" class="delete">Delete Version</button>
                                                </form>
                                            </span>
                                        </summary>
                                        <div>
                                            <p><strong>Governance Status:</strong> <%= version.governance.status %> (<a href="<%= version.governance.approval_link %>" target="_blank">Approval Link</a>)</p>
                                            <% if (version.topology_diagram_link) { %>
                                                <p><strong>Topology Diagram:</strong> <a href="<%= version.topology_diagram_link %>" target="_blank"><%= version.topology_diagram_link %></a></p>
                                            <% } %>
                                            <% if (version.deployment_locations && version.deployment_locations.length > 0) { %>
                                                <p><strong>Deployment Locations:</strong></p>
                                                <ul>
                                                    <% version.deployment_locations.forEach(loc => { %>
                                                        <li>Site: <%= loc.site %>, Zone: <%= loc.zone %>, Segment: <%= loc.segment %></li>
                                                    <% }) %>
                                                </ul>
                                            <% } %>
                                            <% if (version.operational_guidelines_link) { %>
                                                <p><strong>Operational Guidelines:</strong> <a href="<%= version.operational_guidelines_link %>" target="_blank"><%= version.operational_guidelines_link %></a></p>
                                            <% } %>
                                            <% if (version.standards_tags && version.standards_tags.length > 0) { %>
                                                <p><strong>Standards Tags:</strong> <%= version.standards_tags.join(', ') %></p>
                                            <% } %>
                                            <% if (version.observability_links && version.observability_links.length > 0) { %>
                                                <p><strong>Observability Links:</strong></p>
                                                <ul>
                                                    <% version.observability_links.forEach(link => { %>
                                                        <li><%= link.key %>: <a href="<%= link.value %>" target="_blank"><%= link.value %></a></li>
                                                    <% }) %>
                                                </ul>
                                            <% } %>
                                            <% if (version.base_config_source_link) { %>
                                                <p><strong>Base Config Source:</strong> <a href="<%= version.base_config_source_link %>" target="_blank"><%= version.base_config_source_link %></a></p>
                                            <% } %>
                                            <% if (version.supported_capabilities && version.supported_capabilities.length > 0) { %>
                                                <p><strong>Supported Capabilities:</strong> <%= version.supported_capabilities.join(', ') %></p>
                                            <% } %>
                                        </div>
                                    </details>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <p>No versions defined for this component.</p>
                        <% } %>

                        <div style="margin-top: 20px; padding: 15px; border: 1px dashed #ddd; border-radius: 5px; background-color: #fafafa;">
                            <h4>Add New Version to <%= component.name %>:</h4>
                            <form action="/<%= appName %>/parent/<%= parent.id %>/component/<%= component.id %>/add-version" method="POST">
                                <label for="new_version_string">Version String:</label>
                                <input type="text" id="new_version_string" name="version" required>

                                <label for="new_lifecycle_status">Lifecycle Status:</label>
                                <input type="text" id="new_lifecycle_status" name="lifecycle_status" value="active">

                                <h5>Governance:</h5>
                                <label for="new_governance_status">Status:</label>
                                <input type="text" id="new_governance_status" name="governance_status" value="approved">
                                <label for="new_governance_approval_link">Approval Link:</label>
                                <input type="text" id="new_governance_approval_link" name="governance_approval_link">

                                <label for="new_topology_diagram_link">Topology Diagram Link:</label>
                                <input type="text" id="new_topology_diagram_link" name="topology_diagram_link">

                                <h5>Deployment Locations:</h5>
                                <div id="new-version-deployment-locations-container-<%= component.id %>">
                                    <div class="dynamic-field-row">
                                        <input type="text" name="deployment_site_0" placeholder="Site">
                                        <input type="text" name="deployment_zone_0" placeholder="Zone">
                                        <input type="text" name="deployment_segment_0" placeholder="Segment">
                                        <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                                    </div>
                                </div>
                                <button type="button" class="add-field-button" onclick="addDynamicField('deployment-location', 'new-version-deployment-locations-container-<%= component.id %>', 'deployment_')">Add Deployment Location</button>

                                <label for="new_operational_guidelines_link">Operational Guidelines Link:</label>
                                <input type="text" id="new_operational_guidelines_link" name="operational_guidelines_link">

                                <label for="new_standards_tags">Standards Tags (comma-separated):</label>
                                <input type="text" id="new_standards_tags" name="standards_tags">

                                <h5>Observability Links:</h5>
                                <div id="new-version-observability-links-container-<%= component.id %>">
                                    <div class="dynamic-field-row">
                                        <input type="text" name="obs_key_0" placeholder="Key (e.g., logging)">
                                        <input type="text" name="obs_value_0" placeholder="Value (e.g., link)">
                                        <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                                    </div>
                                </div>
                                <button type="button" class="add-field-button" onclick="addDynamicField('observability-link', 'new-version-observability-links-container-<%= component.id %>', 'obs_')">Add Observability Link</button>

                                <label for="new_base_config_source_link">Base Config Source Link:</label>
                                <input type="text" id="new_base_config_source_link" name="base_config_source_link">

                                <label for="new_supported_capabilities">Supported Capabilities (comma-separated):</label>
                                <input type="text" id="new_supported_capabilities" name="supported_capabilities">

                                <button type="submit">Add New Version</button>
                            </form>
                        </div>
                    </div>
                    <div class="actions">
                        <form action="/<%= appName %>/parent/<%= parent.id %>/component/<%= component.id %>/delete" method="POST" style="display: inline;" onsubmit="return confirm('Are you sure you want to delete component <%= component.name %> and ALL its versions?');">
                            <button type="submit" class="delete">Delete Component</button>
                        </form>
                    </div>
                </div>
            <% }) %>
        <% } %>
    </div>

    <script>
        // Trackers for dynamic field indices (per component / version form)
        // These need to be managed carefully for multiple forms on the same page.
        // For simplicity, we'll make them global but you might want to scope them better
        // or reinitialize based on which form is being used.
        let addComponentDeploymentLocationCount = 1; // For the initial 'Add New Component' form
        let addComponentObservabilityLinkCount = 1;

        // Function to create and add dynamic fields (used by both add-component and add-version forms)
        function addDynamicField(type, containerId, fieldPrefix) {
            const container = document.getElementById(containerId);
            const newRow = document.createElement('div');
            newRow.className = 'dynamic-field-row';

            let currentIndex;
            // Determine current index based on the type of field and form
            if (containerId.includes('add-deployment-locations-container')) {
                currentIndex = addComponentDeploymentLocationCount++;
            } else if (containerId.includes('add-observability-links-container')) {
                currentIndex = addComponentObservabilityLinkCount++;
            } else if (containerId.includes('new-version-deployment-locations-container')) {
                // For new version forms, we need a unique counter per component/form.
                // This is a simplification; ideally, you'd track per form instance.
                const countAttr = container.dataset.locationCount || 1;
                currentIndex = parseInt(countAttr);
                container.dataset.locationCount = currentIndex + 1;
            } else if (containerId.includes('new-version-observability-links-container')) {
                const countAttr = container.dataset.observabilityCount || 1;
                currentIndex = parseInt(countAttr);
                container.dataset.observabilityCount = currentIndex + 1;
            } else {
                 // Fallback for any other dynamic fields
                currentIndex = container.children.length; // Use current child count
            }


            if (type === 'deployment-location') {
                newRow.innerHTML = `
                    <input type="text" name="${fieldPrefix}site_${currentIndex}" placeholder="Site" required>
                    <input type="text" name="${fieldPrefix}zone_${currentIndex}" placeholder="Zone" required>
                    <input type="text" name="${fieldPrefix}segment_${currentIndex}" placeholder="Segment" required>
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                `;
            } else if (type === 'observability-link') {
                newRow.innerHTML = `
                    <input type="text" name="${fieldPrefix}key_${currentIndex}" placeholder="Key (e.g., logging)" required>
                    <input type="text" name="${fieldPrefix}value_${currentIndex}" placeholder="Value (e.g., link)" required>
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                `;
            }
            container.appendChild(newRow);
        }

        // IMPORTANT: The 'Edit Component Version' functionality for dynamically added fields
        // requires significant client-side JavaScript to:
        // 1. Fetch the existing data for the version.
        // 2. Dynamically create and pre-populate the input fields (including multiple rows for arrays).
        // 3. Handle adding/removing fields during an edit session.
        // This is typically managed much more efficiently and robustly with a client-side framework
        // like React, Vue, or Angular, or a more sophisticated vanilla JS approach for form management.
        // For now, the 'Edit Version' buttons are disabled in the HTML.
    </script>
</body>
</html>

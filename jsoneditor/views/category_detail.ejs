<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category: <%= category.name %></title>
    <style>
        /* General Body and Container Styles */
        body { font-family: sans-serif; margin: 20px; background-color: #f4f4f4; color: #333; }
        .container { max-width: 800px; margin: 0 auto; background-color: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        h1, h2, h3, h4 { color: #0056b3; }

        /* Form Styles */
        form { margin-bottom: 20px; padding: 15px; border: 1px solid #ddd; border-radius: 5px; background-color: #fafafa; }
        form label { display: block; margin-bottom: 5px; font-weight: bold; }
        form input[type="text"],
        form textarea,
        form input[type="file"],
        form select {
            width: calc(100% - 22px);
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        form textarea { min-height: 60px; resize: vertical; }
        form button {
            background-color: #28a745;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            margin-right: 5px;
        }
        form button:hover { background-color: #218838; }

        /* Item Display Styles */
        .item { background-color: #e9ecef; padding: 15px; margin-bottom: 10px; border-radius: 5px; display: flex; align-items: flex-start; justify-content: space-between; flex-wrap: wrap; }
        .item .details { flex-grow: 1; margin-right: 15px; }
        .item .details h3 { margin: 0 0 5px 0; color: #343a40; }
        .item .details p { margin: 0; font-size: 0.9em; color: #555; }

        /* Sub-component display styles (for nested KVP/libraries, etc.) */
        .sub-component-display {
            background-color: #f0f0f0;
            padding: 10px;
            border-radius: 5px;
            margin-top: 10px;
            font-size: 0.9em;
        }
        .sub-component-display ul {
            list-style-type: disc;
            margin-left: 20px;
            padding: 0;
        }
        .sub-component-display li {
            margin-bottom: 5px;
        }
        .sub-component-display strong { color: #555; }

        /* Version specific styles */
        .component-version-card {
            border: 1px solid #b9d8f7;
            background-color: #eaf6ff;
            padding: 10px;
            margin-top: 10px;
            border-radius: 5px;
        }
        .component-version-card details {
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px dashed #c1e0ff;
        }

        /* Action Buttons (Edit, Delete) */
        .actions { display: flex; flex-wrap: wrap; gap: 5px; margin-top: 10px; }
        .actions button,
        .actions a.button {
            background-color: #007bff;
            color: white;
            padding: 8px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }
        .actions button:hover,
        .actions a.button:hover { background-color: #0056b3; }
        .actions button.delete { background-color: #dc3545; }
        .actions button.delete:hover { background-color: #c82333; }

        /* Message Display Styles */
        .message { padding: 10px; margin-bottom: 20px; border-radius: 5px; }
        .message.error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .message:not(.error) {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        /* Dynamic Fields (For add forms for KVP, etc.) */
        .dynamic-fields-section {
            border: 1px dashed #b9d8f7;
            padding: 10px;
            margin-bottom: 10px;
            background-color: #eaf6ff;
            border-radius: 5px;
        }
        .dynamic-field-row {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 8px;
            flex-wrap: wrap;
        }
        .dynamic-field-row input, .dynamic-field-row select, .dynamic-field-row textarea {
            flex: 1;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .dynamic-field-row button {
            background-color: #dc3545;
            color: white;
            padding: 6px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9em;
        }
        .dynamic-field-row button:hover {
            background-color: #c82333;
        }
        .add-field-button {
            background-color: #007bff;
            margin-top: 10px;
        }
        .add-field-button:hover {
            background-color: #0056b3;
        }
        /* Style for the Edit Category form (hidden by default) */
        .edit-category-form {
            display: none;
            margin-top: 20px;
            padding: 15px;
            border: 1px solid #b3d9ff;
            background-color: #e0f2ff;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <a href="/<%= appName %>/" class="button">‚Üê Back to All Categories</a>
        <h1>Category: <%= category.name %></h1>
        <p><strong>ID:</strong> <%= category.id %></p>
        <p><strong>Version:</strong> <%= category.category_version %></p>
        <p><strong>Status:</strong> <%= category.status %></p>
        <p><strong>Governance Link:</strong> <a href="<%= category.governance_record_link %>" target="_blank"><%= category.governance_record_link %></a></p>
        <p><strong>Topology Link:</strong> <a href="<%= category.topology_view_link %>" target="_blank"><%= category.topology_view_link %></a></p>
        <p><strong>Rationale:</strong> <%= category.rationale %></p>
        <p><strong>Roadmap Link:</strong> <a href="<%= category.roadmap_link %>" target="_blank"><%= category.roadmap_link %></a></p>
        <p><strong>FSA Link:</strong> <a href="<%= category.fsa_link %>" target="_blank"><%= category.fsa_link %></a></p>
        <p><strong>Last Updated:</strong> <%= category.last_updated ? new Date(category.last_updated).toLocaleString('en-GB') : 'N/A' %></p>


        <div class="sub-component-display">
            <% if (category.guidelines_library_tags && category.guidelines_library_tags.length > 0) { %>
                <div><strong>Guidelines Tags:</strong> <%= category.guidelines_library_tags.join(', ') %></div>
            <% } %>
            <% if (category.controls_alignments_library_tags && category.controls_alignments_library_tags.length > 0) { %>
                <div><strong>Controls Alignments Tags:</strong> <%= category.controls_alignments_library_tags.join(', ') %></div>
            <% } %>
            <% if (category.standards_library_tags && category.standards_library_tags.length > 0) { %>
                <div><strong>Standards Tags:</strong> <%= category.standards_library_tags.join(', ') %></div>
            <% } %>
            <% if (category.fsa_library_tags && category.fsa_library_tags.length > 0) { %>
                <div><strong>FSA Library Tags:</strong> <%= category.fsa_library_tags.join(', ') %></div>
            <% } %>
            <% if (category.observability_kvp && category.observability_kvp.length > 0) { %>
                <div><strong>Observability Contacts:</strong>
                    <ul>
                        <% category.observability_kvp.forEach(item => { %>
                            <li><%= item.key %>: <a href="<%= item.value %>" target="_blank"><%= item.value %></a></li>
                        <% }) %>
                    </ul>
                </div>
            <% } %>
            <% if (category.contacts_kvp && category.contacts_kvp.length > 0) { %>
                <div><strong>General Contacts:</strong>
                    <ul>
                        <% category.contacts_kvp.forEach(item => { %>
                            <li><%= item.key %>: <%= item.value %></li>
                        <% }) %>
                    </ul>
                </div>
            <% } %>
        </div>

        <div class="actions">
            <button onclick="toggleEditCategoryForm()">Edit Category Details</button>
        </div>

        <div class="edit-category-form" id="edit-category-form">
            <h2>Edit Category Details</h2>
            <form action="/<%= appName %>/update-category" method="POST">
                <input type="hidden" name="id" value="<%= category.id %>">

                <label for="edit_category_name">Category Name:</label>
                <input type="text" id="edit_category_name" name="name" value="<%= category.name %>" required>

                <label for="edit_category_version">Category Version:</label>
                <input type="text" id="edit_category_version" name="category_version" value="<%= category.category_version %>">

                <label for="edit_category_status">Status:</label>
                <select id="edit_category_status" name="status">
                    <option value="notApproved" <%= category.status === 'notApproved' ? 'selected' : '' %>>notApproved</option>
                    <option value="isPending" <%= category.status === 'isPending' ? 'selected' : '' %>>isPending</option>
                    <option value="isApproved" <%= category.status === 'isApproved' ? 'selected' : '' %>>isApproved</option>
                    <option value="isRetired" <%= category.status === 'isRetired' ? 'selected' : '' %>>isRetired</option>
                </select>

                <label for="edit_governance_record_link">Governance Record Link:</label>
                <input type="text" id="edit_governance_record_link" name="governance_record_link" value="<%= category.governance_record_link %>">

                <label for="edit_topology_view_link">Topology View Link:</label>
                <input type="text" id="edit_topology_view_link" name="topology_view_link" value="<%= category.topology_view_link %>">

                <label for="edit_rationale">Rationale:</label>
                <textarea id="edit_rationale" name="rationale"><%= category.rationale %></textarea>

                <label for="edit_roadmap_link">Roadmap Link:</label>
                <input type="text" id="edit_roadmap_link" name="roadmap_link" value="<%= category.roadmap_link %>">

                <label for="edit_fsa_link">FSA Link:</label>
                <input type="text" id="edit_fsa_link" name="fsa_link" value="<%= category.fsa_link %>">

                <h3>Library Tags (comma-separated):</h3>
                <label for="edit_guidelines_library_tags">Guidelines:</label>
                <input type="text" id="edit_guidelines_library_tags" name="guidelines_library_tags" value="<%= category.guidelines_library_tags.join(', ') %>">

                <label for="edit_controls_alignments_library_tags">Controls Alignments:</label>
                <input type="text" id="edit_controls_alignments_library_tags" name="controls_alignments_library_tags" value="<%= category.controls_alignments_library_tags.join(', ') %>">

                <label for="edit_standards_library_tags">Standards:</label>
                <input type="text" id="edit_standards_library_tags" name="standards_library_tags" value="<%= category.standards_library_tags.join(', ') %>">

                <label for="edit_fsa_library_tags">FSA Library Tags:</label>
                <input type="text" id="edit_fsa_library_tags" name="fsa_library_tags" value="<%= category.fsa_library_tags.join(', ') %>">

                <h3>Observability (Key-Value Pairs):</h3>
                <div id="edit-observability-kvp-container">
                    <% if (category.observability_kvp && category.observability_kvp.length > 0) { %>
                        <% category.observability_kvp.forEach((item, index) => { %>
                            <div class="dynamic-field-row">
                                <input type="text" name="observability_key_<%= index %>" placeholder="Key" value="<%= item.key %>" required>
                                <input type="text" name="observability_value_<%= index %>" placeholder="Value" value="<%= item.value %>" required>
                                <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                            </div>
                        <% }) %>
                    <% } %>
                </div>
                <button type="button" class="add-field-button" onclick="addDynamicField('kvp', 'edit-observability-kvp-container', 'observability_', <%= category.observability_kvp ? category.observability_kvp.length : 0 %>)">Add Observability Link</button>

                <h3>Contacts (Key-Value Pairs):</h3>
                <div id="edit-contacts-kvp-container">
                    <% if (category.contacts_kvp && category.contacts_kvp.length > 0) { %>
                        <% category.contacts_kvp.forEach((item, index) => { %>
                            <div class="dynamic-field-row">
                                <input type="text" name="contacts_key_<%= index %>" placeholder="Key" value="<%= item.key %>" required>
                                <input type="text" name="contacts_value_<%= index %>" placeholder="Value" value="<%= item.value %>" required>
                                <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                            </div>
                        <% }) %>
                    <% } %>
                </div>
                <button type="button" class="add-field-button" onclick="addDynamicField('kvp', 'edit-contacts-kvp-container', 'contacts_', <%= category.contacts_kvp ? category.contacts_kvp.length : 0 %>)">Add Contact</button>


                <button type="submit">Save Category Changes</button>
                <button type="button" class="button" onclick="toggleEditCategoryForm()">Cancel</button>
            </form>
        </div>


        <% if (message) { %>
            <div class="message <%= message.includes('Error') ? 'error' : '' %>">
                <%= message %>
            </div>
        <% } %>

        <hr style="margin: 30px 0; border: 0; border-top: 1px dashed #ccc;">


        <h2>Associated Components</h2>
        <%
            // Filter components to only show those belonging to this category
            const associatedComponents = allComponents.filter(comp => comp.category_id === category.id);
        %>
        <% if (associatedComponents && associatedComponents.length > 0) { %>
            <% associatedComponents.forEach(component => { %>
                <div class="item">
                    <div class="details">
                        <h3><%= component.name %> <small>(ID: <%= component.id %>)</small></h3>
                        <p><strong>Description:</strong> <%= component.description %></p>
                        <p><strong>Type:</strong> <%= component.component_type %></p>
                        <p><strong>Label:</strong> <%= component.component_label %></p>
                        <p><strong>Last Updated:</strong> <%= component.last_updated ? new Date(component.last_updated).toLocaleString('en-GB') : 'N/A' %></p>

                        <div class="sub-component-display">
                            <% if (component.arr_flags && component.arr_flags.length > 0) { %>
                                <div><strong>ARR Flags:</strong>
                                    <ul>
                                        <% component.arr_flags.forEach(flag => { %>
                                            <li><a href="<%= flag.link %>" target="_blank"><%= flag.link %></a></li>
                                        <% }) %>
                                    </ul>
                                </div>
                            <% } %>
                            <% if (component.risk_flags && component.risk_flags.length > 0) { %>
                                <div><strong>Risk Flags:</strong>
                                    <ul>
                                        <% component.risk_flags.forEach(flag => { %>
                                            <li><a href="<%= flag.link %>" target="_blank"><%= flag.link %></a></li>
                                        <% }) %>
                                    </ul>
                                </div>
                            <% } %>
                        </div>

                        <h4>Component Versions:</h4>
                        <% if (component.component_versions && component.component_versions.length > 0) { %>
                            <% component.component_versions.forEach(version => { %>
                                <div class="component-version-card">
                                    <details>
                                        <summary>
                                            <strong>Version: <%= version.version %></strong>
                                            (Lifecycle: <%= version.lifecycle_status %>)
                                            <span style="float: right;">
                                                <button disabled title="Full dynamic edit form is complex to implement with plain EJS/JS.">Edit Version (WIP)</button>
                                                <form action="/<%= appName %>/component/<%= component.id %>/version/<%= version.version %>/delete" method="POST" style="display: inline;" onsubmit="return confirm('Are you sure you want to delete version <%= version.version %>?');">
                                                    <input type="hidden" name="categoryId" value="<%= category.id %>"> <button type="submit" class="delete">Delete Version</button>
                                                </form>
                                            </span>
                                        </summary>
                                        <div>
                                            <p><strong>Governance Status:</strong> <%= version.governance.status %> (<a href="<%= version.governance.approval_link %>" target="_blank">Approval Link</a>)</p>
                                            <% if (version.topology_diagram_link) { %>
                                                <p><strong>Topology Diagram:</strong> <a href="<%= version.topology_diagram_link %>" target="_blank"><%= version.topology_diagram_link %></a></p>
                                            <% } %>
                                            <% if (version.deployment_locations && version.deployment_locations.length > 0) { %>
                                                <p><strong>Deployment Locations:</strong></p>
                                                <ul>
                                                    <% version.deployment_locations.forEach(loc => { %>
                                                        <li>Site: <%= loc.site %>, Zone: <%= loc.zone %>, Segment: <%= loc.segment %></li>
                                                    <% }) %>
                                                </ul>
                                            <% } %>
                                            <% if (version.operational_guidelines_link) { %>
                                                <p><strong>Operational Guidelines:</strong> <a href="<%= version.operational_guidelines_link %>" target="_blank"><%= version.operational_guidelines_link %></a></p>
                                            <% } %>
                                            <% if (version.standards_tags && version.standards_tags.length > 0) { %>
                                                <p><strong>Standards Tags:</strong> <%= version.standards_tags.join(', ') %></p>
                                            <% } %>
                                            <% if (version.observability_links && version.observability_links.length > 0) { %>
                                                <p><strong>Observability Links:</strong></p>
                                                <ul>
                                                    <% version.observability_links.forEach(link => { %>
                                                        <li><%= link.key %>: <a href="<%= link.value %>" target="_blank"><%= link.value %></a></li>
                                                    <% }) %>
                                                </ul>
                                            <% } %>
                                            <% if (version.base_config_source_link) { %>
                                                <p><strong>Base Config Source:</strong> <a href="<%= version.base_config_source_link %>" target="_blank"><%= version.base_config_source_link %></a></p>
                                            <% } %>
                                            <% if (version.supported_capabilities && version.supported_capabilities.length > 0) { %>
                                                <p><strong>Supported Capabilities:</strong> <%= version.supported_capabilities.join(', ') %></p>
                                            <% } %>
                                        </div>
                                    </details>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <p>No versions defined for this component.</p>
                        <% } %>

                        <div style="margin-top: 20px; padding: 15px; border: 1px dashed #ddd; border-radius: 5px; background-color: #fafafa;">
                            <h4>Add New Version to <%= component.name %>:</h4>
                            <form action="/<%= appName %>/component/<%= component.id %>/add-version" method="POST">
                                <input type="hidden" name="categoryId" value="<%= category.id %>"> <label for="new_version_string_<%= component.id %>">Version String:</label>
                                <input type="text" id="new_version_string_<%= component.id %>" name="version" required>

                                <label for="new_lifecycle_status_<%= component.id %>">Lifecycle Status:</label>
                                <select id="new_lifecycle_status_<%= component.id %>" name="lifecycle_status">
                                    <option value="Strategic">Strategic</option>
                                    <option value="Niche">Niche</option>
                                    <option value="Contain">Contain</option>
                                    <option value="Retired">Retired</option>
                                </select>

                                <h5>Governance:</h5>
                                <label for="new_governance_status_<%= component.id %>">Status:</label>
                                <input type="text" id="new_governance_status_<%= component.id %>" name="governance_status" value="approved">
                                <label for="new_governance_approval_link_<%= component.id %>">Approval Link:</label>
                                <input type="text" id="new_governance_approval_link_<%= component.id %>" name="governance_approval_link">

                                <label for="new_topology_diagram_link_<%= component.id %>">Topology Diagram Link:</label>
                                <input type="text" id="new_topology_diagram_link_<%= component.id %>" name="topology_diagram_link">

                                <h5>Deployment Locations:</h5>
                                <div id="new-version-deployment-locations-container-<%= component.id %>">
                                    <div class="dynamic-field-row">
                                        <input type="text" name="new_version_deployment_site_0" placeholder="Site">
                                        <input type="text" name="new_version_deployment_zone_0" placeholder="Zone">
                                        <input type="text" name="new_version_deployment_segment_0" placeholder="Segment">
                                        <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                                    </div>
                                </div>
                                <button type="button" class="add-field-button" onclick="addDynamicField('deployment-location', 'new-version-deployment-locations-container-<%= component.id %>', 'new_version_deployment_', 0, 'version')">Add Deployment Location</button>

                                <label for="new_operational_guidelines_link_<%= component.id %>">Operational Guidelines Link:</label>
                                <input type="text" id="new_operational_guidelines_link_<%= component.id %>" name="operational_guidelines_link">

                                <label for="new_standards_tags_<%= component.id %>">Standards Tags (comma-separated):</label>
                                <input type="text" id="new_standards_tags_<%= component.id %>" name="standards_tags">

                                <h5>Observability Links:</h5>
                                <div id="new-version-observability-links-container-<%= component.id %>">
                                    <div class="dynamic-field-row">
                                        <input type="text" name="new_version_obs_key_0" placeholder="Key (e.g., logging)">
                                        <input type="text" name="new_version_obs_value_0" placeholder="Value (e.g., link)">
                                        <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                                    </div>
                                </div>
                                <button type="button" class="add-field-button" onclick="addDynamicField('kvp', 'new-version-observability-links-container-<%= component.id %>', 'new_version_obs_', 0, 'version')">Add Observability Link</button>

                                <label for="new_base_config_source_link_<%= component.id %>">Base Config Source Link:</label>
                                <input type="text" id="new_base_config_source_link_<%= component.id %>" name="base_config_source_link">

                                <label for="new_supported_capabilities_<%= component.id %>">Supported Capabilities (comma-separated):</label>
                                <input type="text" id="new_supported_capabilities_<%= component.id %>" name="supported_capabilities">

                                <button type="submit">Add New Version</button>
                            </form>
                        </div>
                    </div>
                    <div class="actions">
                        <form action="/<%= appName %>/delete-component" method="POST" style="display: inline;" onsubmit="return confirm('Are you sure you want to delete component <%= component.name %> and ALL its versions?');">
                            <input type="hidden" name="id" value="<%= component.id %>">
                            <input type="hidden" name="categoryId" value="<%= category.id %>"> <button type="submit" class="delete">Delete Component</button>
                        </form>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <p>No components found for this Category.</p>
        <% } %>

        <h2>Add New Component</h2>
        <form action="/<%= appName %>/add-component" method="POST">
            <input type="hidden" name="category_id" value="<%= category.id %>"> <label for="add_component_name">Component Name:</label>
            <input type="text" id="add_component_name" name="name" required>

            <label for="add_component_description">Description:</label>
            <textarea id="add_component_description" name="description"></textarea>

            <label for="add_component_type">Component Type:</label>
            <input type="text" id="add_component_type" name="component_type">

            <label for="add_component_label">Component Label:</label>
            <input type="text" id="add_component_label" name="component_label">

            <h3>Flags:</h3>
            <label for="add_arr_flag">ARR Flags:</label>
            <div id="add-arr-flags-container">
                <div class="dynamic-field-row">
                    <input type="text" name="arr_link_0" placeholder="ARR Link">
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                </div>
            </div>
            <button type="button" class="add-field-button" onclick="addDynamicField('flag-link', 'add-arr-flags-container', 'arr_')">Add ARR Flag Link</button>

            <label for="add_risk_flag">Risk Flags:</label>
            <div id="add-risk-flags-container">
                <div class="dynamic-field-row">
                    <input type="text" name="risk_link_0" placeholder="Risk Link">
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                </div>
            </div>
            <button type="button" class="add-field-button" onclick="addDynamicField('flag-link', 'add-risk-flags-container', 'risk_')">Add Risk Flag Link</button>

            <h3>Initial Version Details:</h3>
            <label for="initial_version_string">Version String:</label>
            <input type="text" id="initial_version_string" name="version" value="1.0.0" required>

            <label for="initial_lifecycle_status">Lifecycle Status:</label>
            <select id="initial_lifecycle_status" name="lifecycle_status">
                <option value="Strategic">Strategic</option>
                <option value="Niche">Niche</option>
                <option value="Contain">Contain</option>
                <option value="Retired">Retired</option>
            </select>

            <h4>Governance:</h4>
            <label for="initial_governance_status">Status:</label>
            <input type="text" id="initial_governance_status" name="governance_status" value="approved">
            <label for="initial_governance_approval_link">Approval Link:</label>
            <input type="text" id="initial_governance_approval_link" name="governance_approval_link">

            <label for="initial_topology_diagram_link">Topology Diagram Link:</label>
            <input type="text" id="initial_topology_diagram_link" name="topology_diagram_link">

            <h4>Deployment Locations:</h4>
            <div id="add-component-deployment-locations-container">
                <div class="dynamic-field-row">
                    <input type="text" name="deployment_site_0" placeholder="Site">
                    <input type="text" name="deployment_zone_0" placeholder="Zone">
                    <input type="text" name="deployment_segment_0" placeholder="Segment">
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                </div>
            </div>
            <button type="button" class="add-field-button" onclick="addDynamicField('deployment-location', 'add-component-deployment-locations-container', 'deployment_')">Add Deployment Location</button>

            <label for="initial_operational_guidelines_link">Operational Guidelines Link:</label>
            <input type="text" id="initial_operational_guidelines_link" name="operational_guidelines_link">

            <label for="initial_standards_tags">Standards Tags (comma-separated):</label>
            <input type="text" id="initial_standards_tags" name="standards_tags">

            <h4>Observability Links:</h4>
            <div id="add-component-observability-links-container">
                <div class="dynamic-field-row">
                    <input type="text" name="obs_key_0" placeholder="Key (e.g., logging)">
                    <input type="text" name="obs_value_0" placeholder="Value (e.g., link)">
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                </div>
            </div>
            <button type="button" class="add-field-button" onclick="addDynamicField('kvp', 'add-component-observability-links-container', 'obs_')">Add Observability Link</button>

            <label for="initial_base_config_source_link">Base Config Source Link:</label>
            <input type="text" id="initial_base_config_source_link" name="base_config_source_link">

            <label for="initial_supported_capabilities">Supported Capabilities (comma-separated):</label>
            <input type="text" id="initial_supported_capabilities" name="supported_capabilities">

            <button type="submit">Add Component with Initial Version</button>
        </form>

        <hr style="margin: 30px 0; border: 0; border-top: 1px dashed #ccc;">


        <h2>Associated Customer Option Sets</h2>
        <%
            // Filter customer option sets to only show those belonging to this category
            const associatedCustomerOptionSets = allCustomerOptionSets.filter(cos => cos.category_id === category.id);
        %>
        <% if (associatedCustomerOptionSets && associatedCustomerOptionSets.length > 0) { %>
            <% associatedCustomerOptionSets.forEach(optionSet => { %>
                <div class="item">
                    <div class="details">
                        <h3><%= optionSet.customer_name %></h3>
                        <p><strong>Version:</strong> <%= optionSet.customer_option_version %></p>
                        <p><strong>Lifecycle:</strong> <%= optionSet.lifecycle_status %></p>
                        <p><strong>Associated Category:</strong> <%= optionSet.category_id %></p>
                        <p><strong>Last Updated:</strong> <%= optionSet.last_updated ? new Date(optionSet.last_updated).toLocaleString('en-GB') : 'N/A' %></p>
                    </div>
                    <div class="actions">
                        <a href="/<%= appName %>/customer-options/<%= optionSet.id %>" class="button">View/Edit</a>
                        <form action="/<%= appName %>/delete-customer-option-set" method="POST" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete Customer Option Set <%= optionSet.customer_name %>?');">
                            <input type="hidden" name="id" value="<%= optionSet.id %>">
                            <input type="hidden" name="categoryId" value="<%= optionSet.category_id %>"> <button type="submit" class="delete">Delete</button>
                        </form>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <p>No Customer Option Sets found for this Category.</p>
        <% } %>

        <h2>Add New Customer Option Set for This Category</h2>
        <form action="/<%= appName %>/add-customer-option-set" method="POST">
            <input type="hidden" name="category_id" value="<%= category.id %>"> <label for="add_customer_name">Customer Name:</label>
            <input type="text" id="add_customer_name" name="customer_name" required>

            <label for="add_customer_option_version">Version:</label>
            <input type="text" id="add_customer_option_version" name="customer_option_version" required>

            <label for="add_customer_option_lifecycle_status">Lifecycle Status:</label>
            <select id="add_customer_option_lifecycle_status" name="lifecycle_status">
                <option value="Strategic">Strategic</option>
                <option value="Niche">Niche</option>
                <option value="Contain">Contain</option>
                <option value="Retired">Retired</option>
            </select>

            <h4>Governance:</h4>
            <label for="add_customer_option_governance_status">Status:</label>
            <input type="text" id="add_customer_option_governance_status" name="governance_status" value="approved">
            <label for="add_customer_option_governance_approval_link">Approval Link:</label>
            <input type="text" id="add_customer_option_governance_approval_link" name="governance_approval_link">

            <label for="add_guidance_rationale">Guidance / Rationale:</label>
            <textarea id="add_guidance_rationale" name="guidance_rationale"></textarea>

            <label for="add_capabilities_required">Capabilities Required (comma-separated):</label>
            <input type="text" id="add_capabilities_required" name="capabilities_required">

            <h3>Options:</h3>
            <div id="add-customer-options-container">
                <div class="dynamic-field-row">
                    <input type="text" name="option_name_0" placeholder="Option Name" required>
                    <textarea name="config_pseudocode_0" placeholder="Config Pseudo-code Block"></textarea>
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                </div>
            </div>
            <button type="button" class="add-field-button" onclick="addDynamicField('customer-option', 'add-customer-options-container', 'option_')">Add Option</button>

            <button type="submit">Add Customer Option Set</button>
        </form>

    </div>

    <script>
        // Trackers for dynamic field indices (per form, generally)
        let addCategoryObservabilityCount = <%= category.observability_kvp ? category.observability_kvp.length : 1 %>;
        let addCategoryContactsCount = <%= category.contacts_kvp ? category.contacts_kvp.length : 1 %>;

        // Initialize for add component form on this page
        let addComponentDeploymentLocationCount = 1; 
        let addComponentObservabilityLinkCount = 1;
        let addArrFlagCount = 1; 
        let addRiskFlagCount = 1; 

        // Initialize for add customer option set form on this page
        let addCustomerOptionCount = 1; 


        // General purpose function for adding dynamic KVP/Array fields
        // Note: The prefixes for dynamically added fields in add-version forms are different
        // from those in the initial add-component form (e.g., 'new_version_deployment_' vs 'deployment_').
        // This function must use the correct prefix for the specific form it's called from.
        // It now takes an optional 'initialIndex' if pre-populating an edit form.
        function addDynamicField(type, containerId, fieldPrefix, initialIndex = 0, context = 'add') {
            const container = document.getElementById(containerId);
            const newRow = document.createElement('div');
            newRow.className = 'dynamic-field-row';

            let currentIndex;
            // Determine current index based on the container ID for more reliable unique naming
            // and separate counters for different forms on the same page.
            if (context === 'version') { // For add-version forms (which can be multiple on page)
                currentIndex = container.dataset.nextIndex || initialIndex; // Use dataset for unique tracking per version form
                container.dataset.nextIndex = parseInt(currentIndex) + 1; // Update for next use
            } else if (containerId === 'add-observability-kvp-container') {
                currentIndex = addCategoryObservabilityCount++;
            } else if (containerId === 'add-contacts-kvp-container') {
                currentIndex = addCategoryContactsCount++;
            } else if (containerId === 'add-component-deployment-locations-container') {
                currentIndex = addComponentDeploymentLocationCount++;
            } else if (containerId === 'add-component-observability-links-container') {
                currentIndex = addComponentObservabilityLinkCount++;
            } else if (containerId === 'add-arr-flags-container') {
                currentIndex = addArrFlagCount++;
            } else if (containerId === 'add-risk-flags-container') {
                currentIndex = addRiskFlagCount++;
            } else if (containerId === 'add-customer-options-container') {
                currentIndex = addCustomerOptionCount++;
            } else if (containerId === 'edit-observability-kvp-container') {
                // For edit forms, ensure the initialIndex is used then increment
                currentIndex = container.dataset.nextIndexForEdit || initialIndex;
                container.dataset.nextIndexForEdit = parseInt(currentIndex) + 1;
            } else if (containerId === 'edit-contacts-kvp-container') {
                currentIndex = container.dataset.nextIndexForEdit || initialIndex;
                container.dataset.nextIndexForEdit = parseInt(currentIndex) + 1;
            }
            else {
                 // Fallback if none of the specific containers match
                currentIndex = container.children.length; // Fallback, less robust for multiple forms
            }


            if (type === 'kvp') { // Used for Category Observability and Contacts, Component Observability (in add/edit forms)
                newRow.innerHTML = `
                    <input type="text" name="${fieldPrefix}key_${currentIndex}" placeholder="Key" required>
                    <input type="text" name="${fieldPrefix}value_${currentIndex}" placeholder="Value" required>
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                `;
            } else if (type === 'deployment-location') { // Used for Component Deployment Locations (in add/edit forms)
                newRow.innerHTML = `
                    <input type="text" name="${fieldPrefix}site_${currentIndex}" placeholder="Site" required>
                    <input type="text" name="${fieldPrefix}zone_${currentIndex}" placeholder="Zone" required>
                    <input type="text" name="${fieldPrefix}segment_${currentIndex}" placeholder="Segment" required>
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                `;
            } else if (type === 'flag-link') { // Used for Component ARR/Risk Flags (in add/edit forms)
                newRow.innerHTML = `
                    <input type="text" name="${fieldPrefix}link_${currentIndex}" placeholder="Link" required>
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                `;
            } else if (type === 'customer-option') { // Used for Customer Option Set Options (in add/edit forms)
                newRow.innerHTML = `
                    <input type="text" name="${fieldPrefix}name_${currentIndex}" placeholder="Option Name" required>
                    <textarea name="config_pseudocode_${currentIndex}" placeholder="Config Pseudo-code Block"></textarea>
                    <button type="button" onclick="this.closest('.dynamic-field-row').remove()">Remove</button>
                `;
            }
            container.appendChild(newRow);
        }

        // Toggle Edit Category Form
        function toggleEditCategoryForm() {
            const form = document.getElementById('edit-category-form');
            if (form.style.display === 'none' || form.style.display === '') {
                form.style.display = 'block';
                // Hide view-only details and edit button when form is open
                document.querySelector('.container > p:nth-of-type(2)').style.display = 'none'; // Version
                document.querySelector('.container > p:nth-of-type(3)').style.display = 'none'; // Status
                document.querySelector('.container > p:nth-of-type(4)').style.display = 'none'; // Governance
                document.querySelector('.container > p:nth-of-type(5)').style.display = 'none'; // Topology
                document.querySelector('.container > p:nth-of-type(6)').style.display = 'none'; // Rationale
                document.querySelector('.container > p:nth-of-type(7)').style.display = 'none'; // Roadmap
                document.querySelector('.container > p:nth-of-type(8)').style.display = 'none'; // FSA
                document.querySelector('.container > p:nth-of-type(9)').style.display = 'none'; // Last Updated
                document.querySelector('.sub-component-display').style.display = 'none'; // All KVP/tags
                document.querySelector('.actions button').style.display = 'none'; // The 'Edit Category Details' button
            } else {
                form.style.display = 'none';
                // Show view-only details and edit button when form is closed
                document.querySelector('.container > p:nth-of-type(2)').style.display = 'block';
                document.querySelector('.container > p:nth-of-type(3)').style.display = 'block';
                document.querySelector('.container > p:nth-of-type(4)').style.display = 'block';
                document.querySelector('.container > p:nth-of-type(5)').style.display = 'block';
                document.querySelector('.container > p:nth-of-type(6)').style.display = 'block';
                document.querySelector('.container > p:nth-of-type(7)').style.display = 'block';
                document.querySelector('.container > p:nth-of-type(8)').style.display = 'block';
                document.querySelector('.container > p:nth-of-type(9)').style.display = 'block';
                document.querySelector('.sub-component-display').style.display = 'block';
                document.querySelector('.actions button').style.display = 'inline-block';
            }
        }

        // IMPORTANT: The 'Edit Component Version' functionality is still a WIP.
        // Dynamic generation and pre-population for editing deep nested data in plain JS is very complex.
        // For a full implementation, a client-side framework (React, Vue) is highly recommended.
        // For now, the 'Edit Version' buttons are disabled in the HTML.
    </script>
</body>
</html>
